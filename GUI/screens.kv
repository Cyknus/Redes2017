#:import adapter GUI.ikivy

<LocalLoginScreen>:
    name: 'init'
    GridLayout:
        spacing: 10
        padding: 5
        cols: 2
        Label:
            text: "¿Cuál es mi puerto?"
            size_hint: .7, .6
            color: (0.3, 0.3, 0.3, 1.0)
        TextInput:
            id: my_port
            text: '5001'
            multiline: False
            size_hint: .3, .6
            padding: [8,  ( self.height - self.line_height ) / 2]
        Label:
            text: '¿Cuál es la IP del servidor?'
            size_hint: .7, .3
            color: (0.3, 0.3, 0.3, 1.0)
        TextInput:
            id: server_address
            text: '192.168.1.70'
            multiline: False
            size_hint: .3, .6
            padding: [8,  ( self.height - self.line_height ) / 2]
        Label:
            text: '¿Cuál es el puerto del servidor?'
            size_hint: .7, .3
            color: (0.3, 0.3, 0.3, 1.0)
        TextInput:
            id: server_port
            text: '7000'
            multiline: False
            size_hint: .3, .6
            padding: [8,  ( self.height - self.line_height ) / 2]
        Button:
            text: 'Ingresar'
            size_hint: .7, .4
            padding: [8,  ( self.height - self.line_height ) / 2]
            background_color: (0.43, 0.87, 0.82, 1.0)
            on_press: root.accessRequest(my_port.text, server_address.text, server_port.text)
        Button:
            text: 'Limpiar'
            size_hint: .3, .4
            on_press: server_port.text=''
            on_press: server_address.text=''
            on_press: my_port.text=''

<RemoteLoginScreen>:
    name: 'init'
    GridLayout:
        spacing: 10
        padding: 5
        cols: 2
        Label:
            text: '¿Cuál es la IP del servidor?'
            size_hint: .7, .3
            color: (0.3, 0.3, 0.3, 1.0)
        TextInput:
            id: server_address
            text: '192.168.1.70'
            multiline: False
            size_hint: .3, .6
            padding: [8,  ( self.height - self.line_height ) / 2]
        Label:
            text: '¿Cuál es el puerto del servidor?'
            size_hint: .7, .3
            color: (0.3, 0.3, 0.3, 1.0)
        TextInput:
            id: server_port
            text: '7000'
            multiline: False
            size_hint: .3, .6
            padding: [8,  ( self.height - self.line_height ) / 2]
        Button:
            text: 'Ingresar'
            size_hint: .7, .4
            padding: [8,  ( self.height - self.line_height ) / 2]
            background_color: (0.43, 0.87, 0.82, 1.0)
            on_press: root.accessRequest(server_address.text, server_port.text)
        Button:
            text: 'Limpiar'
            size_hint: .3, .4
            on_press: server_port.text=''
            on_press: server_address.text=''

<ConnectScreen>:
    GridLayout:
        spacing: 10
        padding: 5
        cols: 2
        Label:
            text: 'Usuario'
            color: (0.3, 0.3, 0.3, 1.0)
            size_hint: .7, .6
        TextInput:
            id: username
            multiline: False
            size_hint: .3, .6
            padding: [8,  ( self.height - self.line_height ) / 2]
        Button:
            text: 'Ingresar'
            on_press: root.connect(username.text) if username.text != '' else print("[err] Username needed")
            size_hint: .7, .4
            background_color: (0.43, 0.87, 0.82, 1.0)
        Button:
            text: 'Limpiar'
            on_press: username.text=''
            size_hint: .3, .4

<AudioScreen>:
    BoxLayout:
        Label:
            id: contact_username
            text: "Llamando..."
        Button:
            text: 'Colgar'
            on_press: root.hang_up()
            background_color:  (0.87, 0.43, 0.82, 1.0)

<MainScreen>:
    name: 'main'
    BoxLayout:
        orientation: 'horizontal'
        rows: 2
        background_color: (.471, .09, .286, 1)
        TabbedPanel:
            id: menu
            size_hint: .3, 1
            do_default_tab: False
            TabbedPanelItem:
                text: ''
                background_down: 'GUI/src/chats.png'
                background_normal: 'GUI/src/chats_normal.png'
                BoxLayout:
                    orientation: 'vertical'
                    Button:
                        text: 'Salir'
                        size_hint: 1, None
                        height: 40
                        on_press: root.log_out()
                    ChatsActiveList:
                        id: chats_list
                        sm: root.ids.sm_chats
                        top_parent: root
            TabbedPanelItem:
                text: ''
                background_down: 'GUI/src/contacts.png'
                background_normal: 'GUI/src/contacts_normal.png'
                BoxLayout:
                    orientation: 'vertical'
                    Button:
                        text: ''
                        size_hint: 1, None
                        height: 40
                        background_color: (0.43, 0.87, 0.82, 1.0)
                        on_press: contacts_list.update_contacts()
                        Image:
                            source: 'GUI/src/refresh.png'
                            size: 32, 32
                            y: self.parent.y + self.parent.height - 36
                            x: self.parent.x + self.parent.width / 2 - 16
                    ContactsList:
                        id: contacts_list
                        top_parent: root
        ScreenManager:
            id: sm_chats
            size_hint: .7, 1
            Screen:
                name: 'default'
                Label:
                    color: (0, 0, 0, 1)
                    text: 'Selecciona una conversación'

<LogoutScreen>:
    name: 'logout'
    Label:
        text: 'Adiós!'

<ContactsList>:
    name: 'contacts_list'
    size_hint: 1, 1

<ChatsActiveList>:
    name: 'chats_list'
    size_hint: 1, 1

<NewChatModal>:
    size_hint: None, None
    size: 400, 400
    GridLayout:
        orientation: 'vertical'
        rows: 3
        Label:
            id: contact_username
            text: 'Default text'
            size_hint: 1, 0.2
        TextInput:
            id: new_message
            multiline: True
            size_hint: 1, 0.7
        Button:
            text: 'Enviar'
            on_press: root.send_message(new_message.text.strip())
            size_hint: 1, 0.1
            background_color: (0.43, 0.87, 0.82, 1.0)

<ChatScreen>:
    FloatLayout:
        BoxLayout:
            orientation: 'horizontal'
            size_hint: 1, .1
            pos_hint: {'x': 0, 'y': .9}
            Button:
                text: ''
                size_hint: 0.2, None
                height: 40
                background_color: (0.43, 0.87, 0.82, 0)
                on_press: root.audio_call()
                Image:
                    source: 'GUI/src/audio.png'
                    size: 32, 32
                    y: self.parent.y + self.parent.height - 36
                    x: self.parent.x + self.parent.width / 2 - 16
            Button:
                text: ''
                size_hint: 0.2, None
                height: 40
                background_color: (0.43, 0.87, 0.82, 0)
                on_press: root.video_call()
                Image:
                    source: 'GUI/src/video.png'
                    size: 32, 32
                    y: self.parent.y + self.parent.height - 36
                    x: self.parent.x + self.parent.width / 2 - 16
            Button:
                text: ''
                size_hint: 0.2, None
                height: 40
                background_color: (0.43, 0.87, 0.82, 0)
                on_press: root.close_chat()
                Image:
                    source: 'GUI/src/close.png'
                    size: 32, 32
                    y: self.parent.y + self.parent.height - 36
                    x: self.parent.x + self.parent.width / 2 - 16
        ListView:
            id: messages
            size_hint: .98, .75
            pos_hint: {'x':.005, 'y': 0.12}
            spacing: 7
            adapter: adapter.MyListAdapter()
        TextInput:
            id: block_of_typos
            multiline: True
            size_hint: .84, .11
            pos_hint: {'x':.005, 'y':.005}
        Button:
            on_press: root.send(block_of_typos.text.strip()) if block_of_typos.text.strip() != '' else print("No message to send")
            size_hint: .14, .11
            pos_hint: {'x': .85, 'y': .005}
            background_color: (0, 0, 0, 0)
            Image:
                source: 'GUI/src/send.png'
                size: 50, 50
                y: self.parent.y + self.parent.height - 50
                x: self.parent.x
                allow_stretch: True
